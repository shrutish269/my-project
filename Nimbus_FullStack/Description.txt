
## NIMBUS_FULLSTACK — Fullstack SaaS Dashboard with Real-Time Chat & Product Cart

---

### MODULE: Product API (Backend)

#### 1. ENDPOINT: `/api/products`  
**Requirement:** Must return a list of products in JSON format  
**Method:** `GET`  
**Expected Output:**  
```json
[
  { "name": "Laptop", "price": 1200 },
  { "name": "Mouse", "price": 25 },
  { "name": "Keyboard", "price": 45 }
]
```

**Valid Test Cases:**  
- ✅ API returns 3 products with correct names and prices  
- ✅ Response format is JSON  
- ✅ Status code is 200 OK  

**Invalid Test Cases:**  
- ❌ Server not running → connection refused  
- ❌ Wrong endpoint → `/products` returns 404  
- ❌ CORS not enabled → frontend fetch fails

---

### MODULE: Real-Time Chat (Socket.io)

#### 2. EVENT: `send_message`  
**Requirement:** Broadcast message to all connected clients  
**Valid Test Cases:**  
- ✅ User A sends message → User B receives via `receive_message`  
- ✅ Console logs `User connected:` and `User disconnected:`  
- ✅ Multiple users can chat simultaneously  

**Invalid Test Cases:**  
- ❌ Server not running on port 5001  
- ❌ Missing `socket.on('send_message')` handler  
- ❌ CORS misconfigured → connection blocked

---

### MODULE: Product List (Frontend)

#### 3. COMPONENT: `ProductList.js`  
**Requirement:** Fetch products from backend and display them  
**Valid Test Cases:**  
- ✅ Axios fetches from `http://localhost:5000/api/products`  
- ✅ Renders product name, price, and "Buy Now" button  
- ✅ Shows loading and error states correctly  

**Invalid Test Cases:**  
- ❌ Backend not running → shows "Error fetching products"  
- ❌ Wrong URL → empty product list  
- ❌ Missing `useEffect` → no fetch triggered

---

### MODULE: Redux Cart

#### 4. COMPONENT: `Cart.js`  
**Requirement:** Display items added to cart and allow removal  
**Valid Test Cases:**  
- ✅ Shows item name, price, quantity  
- ✅ "Remove" button dispatches `removeFromCart`  
- ✅ Empty cart shows "Cart is empty"  

**Invalid Test Cases:**  
- ❌ Redux store not configured → `useSelector` fails  
- ❌ Cart slice missing → dispatch errors  
- ❌ No items → UI breaks without fallback

---

### CSS STYLING BREAKDOWN

#### 1. ELEMENT: `body`  
- `background-color: #f5f7fa;` — soft neutral background  
- `margin-top: 20vh;` — vertical centering

#### 2. ELEMENT: `.product-card`  
- `border: 1px solid #ccc;` — clean separation  
- `padding: 10px;` — internal spacing  
- `display: flex; gap: 20px;` — horizontal layout

#### 3. ELEMENT: `button`  
- `background-color: blue; color: white;` — high contrast  
- `padding: 10px;` — click-friendly  
- `border-radius: 5px;` — consistent with form styling

---

### LEARNING OUTCOMES

1. Built a fullstack product dashboard with Express and React  
2. Implemented real-time chat using Socket.io  
3. Connected frontend to backend via Axios  
4. Managed cart state using Redux Toolkit  
5. Applied HTML5 validations and structured test cases  
6. Learned how to modularize backend and frontend folders  
7. Practiced clean UI layout and responsive CSS styling  
8. Pushed multi-folder architecture safely to GitHub
